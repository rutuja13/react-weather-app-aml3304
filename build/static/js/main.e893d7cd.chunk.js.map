{"version":3,"sources":["images/bg.jpg","service/api.js","components/Information.jsx","components/Form.jsx","components/Weather.jsx","App.js","reportWebVitals.js","index.js"],"names":["getData","city","country","a","axios","get","useStyles","makeStyles","component","margin","row","padding","fontSize","letterSpacing","value","color","icons","marginRight","Information","data","classes","now","Date","React","useState","time","setTime","useEffect","setInterval","newTime","updateTime","Box","className","Typography","name","sys","format","main","temp","humidity","sunrise","toLocaleTimeString","sunset","weather","clouds","all","Form","getWeatherData","click","handleClick","getWeather","then","response","console","log","Fragment","height","display","alignItems","width","leftContainer","backgroundImage","logo","backgroundSize","borderRadius","rightContainer","background","Weather","clases","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e893d7cd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bg.9c811a51.jpg\";","import axios from 'axios'\n\nconst URL = 'https://api.openweathermap.org/data/2.5/weather';\nconst API_KEY = 'e6dd013832438287848010ce0261a371'\n\nexport const getData = async(city ,country) =>\n{\n    return await axios.get(`${URL}?q=Toronto,CA&appid=${API_KEY}&units=metric`)\n}","import { Box , Typography , makeStyles} from \"@material-ui/core\"\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport Brightness7Icon from '@material-ui/icons/Brightness7';\nimport OpacityIcon from '@material-ui/icons/Opacity';\nimport FlareIcon from '@material-ui/icons/Flare';\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\nimport DehazeIcon from '@material-ui/icons/Dehaze';\nimport CloudIcon from '@material-ui/icons/Cloud';\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\nimport { format } from 'date-fns';\nimport React from \"react\";\n\n\nconst useStyles = makeStyles({\n    component :{\n        margin : 50\n    },\n    row:{\n        padding : 10 ,\n        fontSize : 20 , \n        letterSpacing : 2\n    },\n    value:{\n        color : '#fff'\n    },\n    icons:{\n        marginRight : 15,\n        color : 'darkred'\n    }\n})\n\n\nconst Information = ({ data }) =>{\n    const classes = useStyles();\n    const now = new Date();\n    let [time, setTime] = React.useState(now);\n\n    function updateTime(){\n        const newTime = new Date();\n        setTime(newTime);\n      }\n    \n      React.useEffect(() => {\n        setInterval(() => {\n          updateTime();\n        }, 1000);\n    })\n\n    return (\n        \n        data?\n        <Box className = {classes.component}>\n            <Typography className={classes.row}><LocationOnIcon className = {classes.icons}/>Location <Box className={classes.value} component = \"span\"> {data.name} , {data.sys.country}</Box></Typography>\n            <Typography className={classes.row}><AccessTimeIcon className = {classes.icons}/>Date and Time<Box className={classes.value} component = \"span\"> {format(time, 'yyyy/MM/dd kk:mm:ss')}</Box></Typography>\n            <Typography className={classes.row}><FlareIcon className = {classes.icons}/>Temperature <Box className={classes.value} component = \"span\">  {data.main.temp}Â°C</Box></Typography>\n            <Typography className={classes.row}><OpacityIcon className = {classes.icons}/>Humidity <Box className={classes.value} component = \"span\">  {data.main.humidity}%</Box></Typography>\n            <Typography className={classes.row}><Brightness7Icon className = {classes.icons}/>Sunrise <Box className={classes.value} component = \"span\">  {new Date(data.sys.sunrise *1000).toLocaleTimeString()}</Box></Typography>\n            <Typography className={classes.row}><Brightness4Icon className = {classes.icons}/>Sunset <Box className={classes.value} component = \"span\">  {new Date(data.sys.sunset *1000).toLocaleTimeString()}</Box></Typography>\n            <Typography className={classes.row}><DehazeIcon className = {classes.icons}/>Conditon <Box className={classes.value} component = \"span\">  {data.weather[0].main}</Box></Typography>\n            <Typography className={classes.row}><CloudIcon className = {classes.icons}/>Clouds <Box className={classes.value} component = \"span\">  {data.clouds.all} </Box></Typography>\n        </Box>:''\n        \n    )\n}\nexport default Information","import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport {getData} from \"../service/api\"\nimport Information from \"./Information\"\n\n\nconst Form = () =>{\n    const [data , getWeatherData ] = useState();\n    const [city ] = useState(\"Toronto \");\n    const [country ] = useState(\"CA\");\n    const [click,handleClick] = useState(true);\n    \n\n    useEffect(()=>{\n        \n        const getWeather = async() =>{\n            city && await getData(city,country).then(response =>{\n                getWeatherData(response.data)\n                console.log(response.data)\n            })\n        }\n        getWeather();\n        handleClick(true);\n    },[click]);\n    \n    return(\n        <React.Fragment>\n            \n            <Information data = {data}>\n\n            </Information>\n        </React.Fragment>\n        \n    )\n}\nexport default Form;","import {Box, makeStyles} from '@material-ui/core'\nimport logo from '../images/bg.jpg'\nimport Form from './Form';\nimport * as React from 'react';\n\n\n\nconst useStyles = makeStyles({\n    component:{\n        height :'100vh',\n        display:'flex',\n        alignItems : 'center',\n        width : '85%',\n        margin : '0 auto',\n        padding : 10 ,\n        fontSize : 20 , \n        letterSpacing : 2\n\n        \n    },\n    leftContainer :{\n\n        backgroundImage: `url(${logo})`,\n        height : '80%',\n        width : '30%',\n        backgroundSize : 'cover',\n        borderRadius : '20px 0px 0px 20px'\n        \n\n    },\n    rightContainer:{\n        background :'linear-gradient(to right , #e74c3c , #e67e22)',\n        height:'80%',\n        width : '70%'\n    }\n    \n})\n\n\nconst Weather = () =>{\n    const clases = useStyles();\n  \n    return(\n        <Box className={clases.component}>\n            <Box className={clases.leftContainer}>\n            </Box>\n            <Box className = {clases.rightContainer}>\n            <Form />\n            </Box>\n            \n        </Box>\n    )\n}\n\nexport default Weather;","import Weather from './components/Weather'\n\nfunction App() {\n  return (\n    <Weather>\n\n    </Weather>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}